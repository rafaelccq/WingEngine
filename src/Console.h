#pragma once

#include <cwchar>

// ----------------------------------------------- Forward Declaractions -----------------------------------------------
class Renderer;
class FreeTypeGX;
// ---------------------------------------------------------------------------------------------------------------------

#define N_LINES 20
#define LINE_LEN 128

class Console {
public:
	Console(): mLinesPerPage(12) {
		clear();
	};
	
	/* ----------------------------------------------------------------------------------------------------------
		Inits the console object, must be called before the console can be used.
	   ---------------------------------------------------------------------------------------------------------*/
	void init(Renderer* renderer);

	/* ----------------------------------------------------------------------------------------------------------
		Renders the console background, scrollbar etc.
	   ---------------------------------------------------------------------------------------------------------*/
	void render();

	void log(wchar_t* fmt, ...);
	void debugPrint(f32 x, f32 y, wchar_t* fmt, ...);
	void clear();

	void update();
	wchar_t* getCurrentLine();
	void increaseLines();

private:	
	/* ----------------------------------------------------------------------------------------------------------
		Inits font system.
	   ---------------------------------------------------------------------------------------------------------*/
	void initFont();

	/* ----------------------------------------------------------------------------------------------------------
		Sets up the model-view and projection matrices.
	   ---------------------------------------------------------------------------------------------------------*/
	void setupMatrices();

	/* ----------------------------------------------------------------------------------------------------------
		Prepares for rendering: setup vertex descriptor, TEV, and load the matrices.
	   ---------------------------------------------------------------------------------------------------------*/
	void setupRender();

	/* ----------------------------------------------------------------------------------------------------------
		Returns the total number of lines used.
	   ---------------------------------------------------------------------------------------------------------*/
	u16 getNumLines();


	FreeTypeGX* mFontSystem;
	const char* FONT_NAME;
	Mtx mModelView2D;
	Mtx44 mProjection;
	Renderer* mRenderer;

	bool mActive;

	/* ----------------------------------------------------------------------------------------------------------
		The buffer consists of N_LINES lines, each containing at most LINE_LEN characters.
	   ---------------------------------------------------------------------------------------------------------*/
	wchar_t mBuffer[N_LINES+1][LINE_LEN];

	/* ----------------------------------------------------------------------------------------------------------
		Stores the current number of lines in the buffer.
	   ---------------------------------------------------------------------------------------------------------*/
	u16 mNumLines;

	/* ----------------------------------------------------------------------------------------------------------
		Stores the index (into the buffer) of the first line that is displayed on the console. It 
		is used for scroll.
	   ---------------------------------------------------------------------------------------------------------*/
	s16 mFirstLine;

	/* ----------------------------------------------------------------------------------------------------------
		This constants store the number of lines that can be displayed on the screen at once.
	   ---------------------------------------------------------------------------------------------------------*/
	const u8 mLinesPerPage;

	/* ----------------------------------------------------------------------------------------------------------
		Locks the console scroll
	   ---------------------------------------------------------------------------------------------------------*/
	bool mScrollLock;

	/* ----------------------------------------------------------------------------------------------------------
		These two indices indicate the lines the console will render first and last. Note that mFirst can be 
		greater than mLast, because it wraps around. The difference last - first is at most NUM_LINES - 1.
	   ---------------------------------------------------------------------------------------------------------*/
	u16 mFirst;
	u16 mLast;

	/* ----------------------------------------------------------------------------------------------------------
		Indicates whether the debug lines will be shown (debug lines show the source code location that called log).
	   ---------------------------------------------------------------------------------------------------------*/
	bool mShowDebugLines;
};
